apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongodb
  name: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - command:
        - mongod
        - "--bind_ip_all"
        image: "mongo:4.4"
        imagePullPolicy: IfNotPresent
        name: mongodb
        ports:
        - containerPort: 27017
          name: mongo
        volumeMounts:
          # Mount persistent storage on default data dir.
          - mountPath: "/data/db"
            name: mongo-volume
      volumes:
      - name: mongo-volume
        persistentVolumeClaim:
          claimName: mongo-pvc


#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  creationTimestamp: null
#  labels:
#    app: mongo-db
#  name: mongo-db
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app: mongo-db
#  strategy:
#    type: Recreate
#  template:
#    metadata:
#      creationTimestamp: null
#      labels:
#        app: mongo-db
#  spec:
#    replicas: 1
#    selector:
#      matchLabels:
#        app: mongo-db
#   template:
#      metadata:
#        labels:
#         app: mongo-db
#     spec:
#       containers:
#       - command:
#         - mongod
#         - "--bind_ip_all"
#         image: "mongo:4.4"
#         imagePullPolicy: IfNotPresent
#          name: mongo-db
#          ports:
#            - containerPort: 27017
#          resources: {}
#          volumeMounts:
#            - mountPath: /data
#              name: mongo-db
#      hostname: mongo-db
#      restartPolicy: Always
#      volumes:
#        - name: mongo-db
#          persistentVolumeClaim:
#            claimName: mongo-db
#status: {}
